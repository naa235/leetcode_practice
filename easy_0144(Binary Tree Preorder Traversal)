Given the root of a binary tree, return the preorder traversal of its nodes' values

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>allvec;
        function<void(TreeNode*)>dfs=[&](TreeNode* root)->void{
            if(root==nullptr) return ;
            allvec.push_back(root->val);
            if(root->left!=nullptr)dfs(root->left);
            if(root->right!=nullptr)dfs(root->right);
        };
        dfs(root);
        return allvec;
    }
};
