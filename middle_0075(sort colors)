Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, 
with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

#include <vector>
#include <unordered_map>
using namespace std;
class Solution {
public:
    void sortColors(vector<int>& nums) {
        unordered_map<int, int> map;
        map.insert({0, 0});
        map.insert({1, 0});
        map.insert({2, 0});
        for(int num : nums) {
            map[num]++;
        }
        int i = 0;
        for(; i < map[0]; i++) {
            nums[i] = 0;
        }
        for(int count = 0; i < map[0] + map[1]; i++, count++) {
            nums[i] = 1;
        }
        for(int count = 0; i < map[0] + map[1] + map[2]; i++, count++) {
            nums[i] = 2;
        }
    }
};
