Given the root of a binary tree, 
check whether it is a mirror of itself (i.e., symmetric around its center).
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool issame(TreeNode* node1,TreeNode* node2){
        if(node1==nullptr&&node2==nullptr)return true;
        else if(node1==nullptr||node2==nullptr||node1->val!=node2->val)return false;
        return issame(node1->left,node2->right)&&issame(node1->right,node2->left);

    }
    bool isSymmetric(TreeNode* root) {
        return  root==nullptr||issame(root->left,root->right); 
    }
};
