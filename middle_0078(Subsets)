Given an integer array nums of unique elements, return all possible 
subsets (the power set).
The solution set must not contain duplicate subsets. Return the solution in any order.

class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> allSubsets;
        vector<int> currentSubset;
        generateSubsets(0, nums, currentSubset, allSubsets);
        return allSubsets;
    }
    
private:
    void generateSubsets(int index, vector<int>& nums, vector<int>& currentSubset, vector<vector<int>>& allSubsets) {
        if (index == nums.size()) {
            allSubsets.push_back(currentSubset);
            return;
        }
        // Include the current element
        currentSubset.push_back(nums[index]);
        generateSubsets(index + 1, nums, currentSubset, allSubsets);
        
        // Exclude the current element
        currentSubset.pop_back();
        generateSubsets(index + 1, nums, currentSubset, allSubsets);
    }
};
