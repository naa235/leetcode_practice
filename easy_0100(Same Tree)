Given the roots of two binary trees p and q, write a function to check if they are the same or not.
Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p!=nullptr&&q!=nullptr){
            if(p->val!=q->val)return false;
            bool a=isSameTree(p->left, q->left);
            bool b=isSameTree(p->right,q->right);
            if(!(a&&b))return false;
            else return true;
        }
        else if(p==q&&p==nullptr)return true;
        else return false;
    }
};
