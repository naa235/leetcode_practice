Given the head of a linked list, remove the nth node from the end of the list and return its head.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head->next==nullptr)return {};
        ListNode dummy(0,head);
        ListNode*frist=&dummy;
        ListNode*second= head;
        for(int i=1;i<n;i++){
            second=second->next;
        }
        while(second->next!=nullptr){
            second=second->next;
            frist=frist->next;
        }
        frist->next=frist->next->next;
        return dummy.next;

    }
};
